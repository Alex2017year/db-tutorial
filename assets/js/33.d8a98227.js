(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{486:function(t,s,e){"use strict";e.r(s);var a=e(14),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"redis-运维"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-运维"}},[t._v("#")]),t._v(" Redis 运维")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Redis")]),t._v(" 是一个高性能的 key-value 数据库。")]),t._v(" "),e("p",[t._v("SET 操作每秒钟 110000 次；GET 操作每秒钟 81000 次。")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E5%AE%89%E8%A3%85"}},[t._v("安装")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#window-%E4%B8%8B%E5%AE%89%E8%A3%85"}},[t._v("Window 下安装")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#linux-%E4%B8%8B%E5%AE%89%E8%A3%85"}},[t._v("Linux 下安装")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#ubuntu-%E4%B8%8B%E5%AE%89%E8%A3%85"}},[t._v("Ubuntu 下安装")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8"}},[t._v("开机启动")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%BC%80%E6%94%BE%E9%98%B2%E7%81%AB%E5%A2%99%E7%AB%AF%E5%8F%A3"}},[t._v("开放防火墙端口")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#redis-%E4%BD%BF%E7%94%A8%E5%92%8C%E9%85%8D%E7%BD%AE"}},[t._v("Redis 使用和配置")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E5%90%AF%E5%8A%A8"}},[t._v("启动")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%B8%B8%E8%A7%81%E9%85%8D%E7%BD%AE"}},[t._v("常见配置")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E8%AE%BE%E4%B8%BA%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B"}},[t._v("设为守护进程")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#redis-%E9%9B%86%E7%BE%A4%E4%BD%BF%E7%94%A8%E5%92%8C%E9%85%8D%E7%BD%AE"}},[t._v("Redis 集群使用和配置")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E9%9B%86%E7%BE%A4%E8%A7%84%E5%88%92"}},[t._v("集群规划")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E9%83%A8%E7%BD%B2"}},[t._v("部署")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#redis-%E5%91%BD%E4%BB%A4"}},[t._v("Redis 命令")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E9%80%9A%E7%94%A8%E5%91%BD%E4%BB%A4"}},[t._v("通用命令")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E9%9B%86%E7%BE%A4%E5%91%BD%E4%BB%A4"}},[t._v("集群命令")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95"}},[t._v("压力测试")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%AE%A2%E6%88%B7%E7%AB%AF"}},[t._v("客户端")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E8%84%9A%E6%9C%AC"}},[t._v("脚本")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"}},[t._v("参考资料")])])]),t._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("h3",{attrs:{id:"window-下安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#window-下安装"}},[t._v("#")]),t._v(" Window 下安装")]),t._v(" "),e("p",[e("strong",[t._v("下载地址：")]),e("a",{attrs:{href:"https://github.com/MSOpenTech/redis/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/MSOpenTech/redis/releases"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("Redis 支持 32 位和 64 位。这个需要根据你系统平台的实际情况选择，这里我们下载 "),e("strong",[t._v("Redis-x64-xxx.zip")]),t._v("压缩包到 C 盘，解压后，将文件夹重新命名为 "),e("strong",[t._v("redis")]),t._v("。")]),t._v(" "),e("p",[t._v("打开一个 "),e("strong",[t._v("cmd")]),t._v(" 窗口 使用 cd 命令切换目录到 "),e("strong",[t._v("C:\\redis")]),t._v(" 运行 "),e("strong",[t._v("redis-server.exe redis.windows.conf")]),t._v(" 。")]),t._v(" "),e("p",[t._v("如果想方便的话，可以把 redis 的路径加到系统的环境变量里，这样就省得再输路径了，后面的那个 redis.windows.conf 可以省略，如果省略，会启用默认的。")]),t._v(" "),e("p",[t._v("这时候另启一个 cmd 窗口，原来的不要关闭，不然就无法访问服务端了。")]),t._v(" "),e("p",[t._v("切换到 redis 目录下运行 "),e("strong",[t._v("redis-cli.exe -h 127.0.0.1 -p 6379")]),t._v(" 。")]),t._v(" "),e("h3",{attrs:{id:"linux-下安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-下安装"}},[t._v("#")]),t._v(" Linux 下安装")]),t._v(" "),e("p",[e("strong",[t._v("下载地址：")]),t._v(" http://redis.io/download，下载最新文档版本。")]),t._v(" "),e("p",[t._v("下载、解压、编译 Redis")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://download.redis.io/releases/redis-5.0.4.tar.gz\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xzf redis-5.0.4.tar.gz\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" redis-5.0.4\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),e("p",[t._v("为了编译 Redis 源码，你需要 gcc-c++和 tcl。如果你的系统是 CentOS，可以直接执行命令："),e("code",[t._v("yum install -y gcc-c++ tcl")]),t._v(" 来安装。")]),t._v(" "),e("p",[t._v("进入到解压后的 "),e("code",[t._v("src")]),t._v(" 目录，通过如下命令启动 Redis:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("src/redis-server\n")])])]),e("p",[t._v("您可以使用内置的客户端与 Redis 进行交互:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ src/redis-cli\nredis"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" foo bar\nOK\nredis"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" get foo\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n")])])]),e("h3",{attrs:{id:"ubuntu-下安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-下安装"}},[t._v("#")]),t._v(" Ubuntu 下安装")]),t._v(" "),e("p",[t._v("在 Ubuntu 系统安装 Redis 可以使用以下命令:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" redis-server\n")])])]),e("h3",{attrs:{id:"开机启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开机启动"}},[t._v("#")]),t._v(" 开机启动")]),t._v(" "),e("ul",[e("li",[t._v("开机启动配置："),e("code",[t._v('echo "/usr/local/bin/redis-server /etc/redis.conf" >> /etc/rc.local')])])]),t._v(" "),e("h3",{attrs:{id:"开放防火墙端口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开放防火墙端口"}},[t._v("#")]),t._v(" 开放防火墙端口")]),t._v(" "),e("ul",[e("li",[t._v("添加规则："),e("code",[t._v("iptables -I INPUT -p tcp -m tcp --dport 6379 -j ACCEPT")])]),t._v(" "),e("li",[t._v("保存规则："),e("code",[t._v("service iptables save")])]),t._v(" "),e("li",[t._v("重启 iptables："),e("code",[t._v("service iptables restart")])])]),t._v(" "),e("h2",{attrs:{id:"redis-使用和配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-使用和配置"}},[t._v("#")]),t._v(" Redis 使用和配置")]),t._v(" "),e("h3",{attrs:{id:"启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),e("p",[e("strong",[t._v("启动 redis 服务")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/redis/src\n./redis-server\n")])])]),e("p",[e("strong",[t._v("启动 redis 客户端")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/redis/src\n./redis-cli\n")])])]),e("p",[e("strong",[t._v("查看 redis 是否启动")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("redis-cli\n")])])]),e("p",[t._v("以上命令将打开以下终端：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("redis "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v("\n")])])]),e("p",[t._v("127.0.0.1 是本机 IP ，6379 是 redis 服务端口。现在我们输入 PING 命令。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("redis "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ping")]),t._v("\nPONG\n")])])]),e("p",[t._v("以上说明我们已经成功启动了 redis。")]),t._v(" "),e("h3",{attrs:{id:"常见配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见配置"}},[t._v("#")]),t._v(" 常见配置")]),t._v(" "),e("blockquote",[e("p",[t._v("Redis 默认的配置文件是根目录下的 "),e("code",[t._v("redis.conf")]),t._v(" 文件。")]),t._v(" "),e("p",[t._v("如果需要指定特定文件作为配置文件，需要使用命令： "),e("code",[t._v("./redis-server -c xxx.conf")])]),t._v(" "),e("p",[t._v("每次修改配置后，需要重启才能生效。")]),t._v(" "),e("p",[t._v("Redis 官方默认配置：")]),t._v(" "),e("ul",[e("li",[t._v("自描述文档 "),e("a",{attrs:{href:"https://raw.githubusercontent.com/antirez/redis/2.8/redis.conf",target:"_blank",rel:"noopener noreferrer"}},[t._v("redis.conf for Redis 2.8"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("自描述文档 "),e("a",{attrs:{href:"https://raw.githubusercontent.com/antirez/redis/2.6/redis.conf",target:"_blank",rel:"noopener noreferrer"}},[t._v("redis.conf for Redis 2.6"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("li",[t._v("自描述文档 "),e("a",{attrs:{href:"https://raw.githubusercontent.com/antirez/redis/2.4/redis.conf",target:"_blank",rel:"noopener noreferrer"}},[t._v("redis.conf for Redis 2.4"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("p",[t._v("自 Redis2.6 起就可以直接通过命令行传递 Redis 配置参数。这种方法可以用于测试。自 Redis2.6 起就可以直接通过命令行传递 Redis 配置参数。这种方法可以用于测试。")])]),t._v(" "),e("h3",{attrs:{id:"设为守护进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设为守护进程"}},[t._v("#")]),t._v(" 设为守护进程")]),t._v(" "),e("p",[t._v("Redis 默认以非守护进程方式启动，而通常我们会将 Redis 设为守护进程启动方式，配置："),e("code",[t._v("daemonize yes")])]),t._v(" "),e("h4",{attrs:{id:"远程访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程访问"}},[t._v("#")]),t._v(" 远程访问")]),t._v(" "),e("p",[t._v("Redis 默认绑定 127.0.0.1，这样就只能本机才能访问，若要 Redis 允许远程访问，需要配置："),e("code",[t._v("bind 0.0.0.0")])]),t._v(" "),e("h4",{attrs:{id:"设置密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置密码"}},[t._v("#")]),t._v(" 设置密码")]),t._v(" "),e("p",[t._v("Redis 默认访问不需要密码，如果需要设置密码，需要如下配置：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("protected-mode yes")])]),t._v(" "),e("li",[e("code",[t._v("requirepass <密码>")])])]),t._v(" "),e("h4",{attrs:{id:"配置参数表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置参数表"}},[t._v("#")]),t._v(" 配置参数表")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("配置项")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("daemonize no")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Redis 默认不是以守护进程的方式运行，可以通过该配置项修改，使用 yes 启用守护进程（Windows 不支持守护线程的配置为 no ）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("pidfile /var/run/redis.pid")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("当 Redis 以守护进程方式运行时，Redis 默认会把 pid 写入 /var/run/redis.pid 文件，可以通过 pidfile 指定")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("port 6379")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定 Redis 监听端口，默认端口为 6379，作者在自己的一篇博文中解释了为什么选用 6379 作为默认端口，因为 6379 在手机按键上 MERZ 对应的号码，而 MERZ 取自意大利歌女 Alessia Merz 的名字")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("bind 127.0.0.1")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("绑定的主机地址")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("timeout 300")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("当客户端闲置多长时间后关闭连接，如果指定为 0，表示关闭该功能")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("loglevel notice")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定日志记录级别，Redis 总共支持四个级别：debug、verbose、notice、warning，默认为 notice")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("logfile stdout")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("日志记录方式，默认为标准输出，如果配置 Redis 为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给 /dev/null")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("databases 16")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置数据库的数量，默认数据库为 0，可以使用 SELECT 命令在连接上指定数据库 id")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("save <seconds> <changes>")]),t._v(" Redis 默认配置文件中提供了三个条件："),e("strong",[t._v("save 900 1")]),t._v("、"),e("strong",[t._v("save 300 10")]),t._v("、"),e("strong",[t._v("save 60 10000")]),t._v(" 分别表示 900 秒（15 分钟）内有 1 个更改，300 秒（5 分钟）内有 10 个更改以及 60 秒内有 10000 个更改。")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("rdbcompression yes")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定存储至本地数据库时是否压缩数据，默认为 yes，Redis 采用 LZF 压缩，如果为了节省 CPU 时间，可以关闭该选项，但会导致数据库文件变的巨大")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("dbfilename dump.rdb")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定本地数据库文件名，默认值为 dump.rdb")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("dir ./")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定本地数据库存放目录")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("slaveof <masterip> <masterport>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置当本机为 slav 服务时，设置 master 服务的 IP 地址及端口，在 Redis 启动时，它会自动从 master 进行数据同步")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("masterauth <master-password>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("当 master 服务设置了密码保护时，slav 服务连接 master 的密码")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("requirepass foobared")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置 Redis 连接密码，如果配置了连接密码，客户端在连接 Redis 时需要通过 AUTH "),e("password",[t._v(" 命令提供密码，默认关闭")])],1)]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("maxclients 128")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置同一时间最大客户端连接数，默认无限制，Redis 可以同时打开的客户端连接数为 Redis 进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis 会关闭新的连接并向客户端返回 max number of clients reached 错误信息")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("maxmemory <bytes>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定 Redis 最大内存限制，Redis 在启动时会把数据加载到内存中，达到最大内存后，Redis 会先尝试清除已到期或即将到期的 Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis 新的 vm 机制，会把 Key 存放内存，Value 会存放在 swap 区")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("appendonly no")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定是否在每次更新操作后进行日志记录，Redis 在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis 本身同步数据文件是按上面 save 条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为 no")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("appendfilename appendonly.aof")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定更新日志文件名，默认为 appendonly.aof")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("appendfsync everysec")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定更新日志条件，共有 3 个可选值："),e("strong",[t._v("no")]),t._v("：表示等操作系统进行数据缓存同步到磁盘（快）"),e("strong",[t._v("always")]),t._v("：表示每次更新操作后手动调用 fsync() 将数据写到磁盘（慢，安全）"),e("strong",[t._v("everysec")]),t._v("：表示每秒同步一次（折中，默认值）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("vm-enabled no")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定是否启用虚拟内存机制，默认值为 no，简单的介绍一下，VM 机制将数据分页存放，由 Redis 将访问量较少的页即冷数据 swap 到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析 Redis 的 VM 机制）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("vm-swap-file /tmp/redis.swap")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("虚拟内存文件路径，默认值为 /tmp/redis.swap，不可多个 Redis 实例共享")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("vm-max-memory 0")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("将所有大于 vm-max-memory 的数据存入虚拟内存，无论 vm-max-memory 设置多小，所有索引数据都是内存存储的(Redis 的索引数据 就是 keys)，也就是说，当 vm-max-memory 设置为 0 的时候，其实是所有 value 都存在于磁盘。默认值为 0")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("vm-page-size 32")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("Redis swap 文件分成了很多的 page，一个对象可以保存在多个 page 上面，但一个 page 上不能被多个对象共享，vm-page-size 是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page 大小最好设置为 32 或者 64bytes；如果存储很大大对象，则可以使用更大的 page，如果不确定，就使用默认值")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("vm-pages 134217728")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置 swap 文件中的 page 数量，由于页表（一种表示页面空闲或使用的 bitmap）是在放在内存中的，，在磁盘上每 8 个 pages 将消耗 1byte 的内存。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("vm-max-threads 4")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置访问 swap 文件的线程数,最好不要超过机器的核数,如果设置为 0,那么所有对 swap 文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为 4")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("glueoutputbuf yes")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("hash-max-zipmap-entries 64 hash-max-zipmap-value 512")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("activerehashing yes")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定是否激活重置哈希，默认为开启（后面在介绍 Redis 的哈希算法时具体介绍）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("include /path/to/local.conf")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定包含其它的配置文件，可以在同一主机上多个 Redis 实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件")])])])]),t._v(" "),e("h2",{attrs:{id:"redis-集群使用和配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-集群使用和配置"}},[t._v("#")]),t._v(" Redis 集群使用和配置")]),t._v(" "),e("p",[t._v("Redis 3.0 后支持集群模式。")]),t._v(" "),e("h3",{attrs:{id:"集群规划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集群规划"}},[t._v("#")]),t._v(" 集群规划")]),t._v(" "),e("p",[e("code",[t._v("Redis")]),t._v(" 集群一般由 "),e("strong",[t._v("多个节点")]),t._v(" 组成，节点数量至少为 "),e("code",[t._v("6")]),t._v(" 个，才能保证组成 "),e("strong",[t._v("完整高可用")]),t._v(" 的集群。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0d1c392?w=1467&h=803&f=png&s=43428",alt:"img"}})]),t._v(" "),e("p",[t._v("理想情况当然是所有节点各自在不同的机器上，首先于资源，本人在部署 Redis 集群时，只得到 3 台服务器。所以，我计划每台服务器部署 2 个 Redis 节点。")]),t._v(" "),e("h3",{attrs:{id:"部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),e("p",[t._v("Redis 集群节点的安装与单节点服务相同，差异仅在于部署方式。")]),t._v(" "),e("p",[t._v("假设三台服务器地址如下：")]),t._v(" "),e("ul",[e("li",[t._v("服务 A：127.0.0.1")]),t._v(" "),e("li",[t._v("服务 B：127.0.0.2")]),t._v(" "),e("li",[t._v("服务 C：127.0.0.3")])]),t._v(" "),e("p",[t._v("分配如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("127.0.0.1")]),t._v(" "),e("th",[t._v("127.0.0.2")]),t._v(" "),e("th",[t._v("127.0.0.3")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("127.0.0.1:6381")]),t._v(" "),e("td",[t._v("127.0.0.2:6383")]),t._v(" "),e("td",[t._v("127.0.0.3:6385")])]),t._v(" "),e("tr",[e("td",[t._v("127.0.0.1:6382")]),t._v(" "),e("td",[t._v("127.0.0.2:6384")]),t._v(" "),e("td",[t._v("127.0.0.3:6386")])])])]),t._v(" "),e("h4",{attrs:{id:"（1）创建节点目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（1）创建节点目录"}},[t._v("#")]),t._v(" （1）创建节点目录")]),t._v(" "),e("p",[t._v("我个人偏好将软件放在 "),e("code",[t._v("/opt")]),t._v(" 目录下，在我的机器中，Redis 都安装在 "),e("code",[t._v("/usr/local/redis")]),t._v(" 目录下。所以，下面的命令和配置都假设 Redis 安装目录为 "),e("code",[t._v("/usr/local/redis")]),t._v(" 。")]),t._v(" "),e("p",[t._v("确保机器上已经安装了 Redis 后，执行以下命令，创建 Redis 集群节点实例目录：")]),t._v(" "),e("ul",[e("li",[t._v("127.0.0.1")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/redis/cluster/6381\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/redis/cluster/6382\n")])])]),e("ul",[e("li",[t._v("127.0.0.2")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/redis/cluster/6383\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/redis/cluster/6384\n")])])]),e("ul",[e("li",[t._v("127.0.0.3")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/redis/cluster/6385\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/redis/cluster/6386\n")])])]),e("h4",{attrs:{id:"（2）集群节点实例配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（2）集群节点实例配置"}},[t._v("#")]),t._v(" （2）集群节点实例配置")]),t._v(" "),e("p",[t._v("每个实例目录下，新建 "),e("code",[t._v("redis.conf")]),t._v(" 配置文件。")]),t._v(" "),e("p",[t._v("实例配置模板以 6381 节点为例（其他节点，完全替换配置中的端口号 6381 即可），如下：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口号")]),t._v("\nport "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6381")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 绑定的主机端口（0.0.0.0 表示允许远程访问）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("bind")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以守护进程方式启动")]),t._v("\ndaemonize "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启集群模式")]),t._v("\ncluster-enabled "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群的配置，配置文件首次启动自动生成")]),t._v("\ncluster-config-file /usr/local/redis/cluster/6381/6381.conf\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求超时时间，设置 10 秒")]),t._v("\ncluster-node-timeout "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启 AOF 持久化")]),t._v("\nappendonly "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数据存放目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dir")]),t._v(" /usr/local/redis/cluster/6381\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进程文件")]),t._v("\npidfile /var/run/redis/redis-6381.pid\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志文件")]),t._v("\nlogfile /usr/local/redis/cluster/6381/6381.log\n")])])]),e("h4",{attrs:{id:"（3）启动-redis-节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（3）启动-redis-节点"}},[t._v("#")]),t._v(" （3）启动 Redis 节点")]),t._v(" "),e("p",[t._v("Redis 的 utils/create-cluster 目录下自带了一个名为 create-cluster 的脚本工具，可以利用它来新建、启动、停止、重启 Redis 节点。")]),t._v(" "),e("p",[t._v("脚本中有几个关键参数：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("PORT")]),t._v("=30000 - 初始端口号")]),t._v(" "),e("li",[e("code",[t._v("TIMEOUT")]),t._v("=2000 - 超时时间")]),t._v(" "),e("li",[e("code",[t._v("NODES")]),t._v("=6 - 节点数")]),t._v(" "),e("li",[e("code",[t._v("REPLICAS")]),t._v("=1 - 备份数")])]),t._v(" "),e("p",[t._v("脚本中的每个命令项会根据初始端口号，以及设置的节点数，遍历的去执行操作。")]),t._v(" "),e("p",[t._v("由于前面的规划中，节点端口是从 6381 ~ 6386，所以需要将 PORT 变量设为 6380。")]),t._v(" "),e("p",[t._v("脚本中启动每个 Redis 节点是通过指定命令行参数来配置属性。所以，我们需要改一下：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$((")]),t._v("PORT "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ENDPORT"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("))")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PORT")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$((")]),t._v("PORT"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("))")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starting '),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PORT")]),t._v('"')]),t._v("\n        /usr/local/redis/src/redis-server /usr/local/redis/cluster/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PORT}")]),t._v("/redis.conf\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),e("p",[t._v("好了，在每台服务器上，都执行 "),e("code",[t._v("./create-cluster start")]),t._v(" 来启动节点。")]),t._v(" "),e("p",[t._v("然后，通过 ps 命令来确认 Redis 进程是否已经工作：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" redis\nroot     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12036")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":26 ?        00:08:28 /usr/local/redis/src/redis-server "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:6381 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nroot     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12038")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":26 ?        00:00:03 /usr/local/redis/src/redis-server "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:6382 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h4",{attrs:{id:"（4）启动集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（4）启动集群"}},[t._v("#")]),t._v(" （4）启动集群")]),t._v(" "),e("p",[t._v("通过 "),e("code",[t._v("redis-cli --cluster create")]),t._v(" 命令可以自动配置集群，如下：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("/usr/local/redis/src/redis-cli --cluster create "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6381 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6382 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.2:6383 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.2:6384 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.3:6385 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.3:6386 --cluster-replicas "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),e("p",[t._v("如果启动成功，可以看到如下信息：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Performing "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("hash")]),t._v(" slots allocation on "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" nodes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nMaster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Slots "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" - "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5460")]),t._v("\nMaster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Slots "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5461")]),t._v(" - "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10922")]),t._v("\nMaster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Slots "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10923")]),t._v(" - "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16383")]),t._v("\nAdding replica "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.2:6384 to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6381\nAdding replica "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.3:6386 to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.2:6383\nAdding replica "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6382 to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.3:6385\nM: 75527b790e46530ea271a5b78f9e0fd9030f68e0 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6381\n   slots:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("-5460"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5461")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" master\nS: 031dd0fd5ad90fa26fcf45d49ad906d063611a6d "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6382\n   replicates 53012ebdd25005840da9ecbe07d937296a264206\nM: 0cfbceec272b6ff70e1dfb5c5346a5cb2c20c884 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.2:6383\n   slots:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5461")]),t._v("-10922"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5462")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" master\nS: 016ae9624202891cc6f2b480ff0634de478197fb "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.2:6384\n   replicates 75527b790e46530ea271a5b78f9e0fd9030f68e0\nM: 53012ebdd25005840da9ecbe07d937296a264206 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.3:6385\n   slots:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10923")]),t._v("-16383"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5461")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" master\nS: b6d70f2ed78922b1dcb7967ebe1d05ad9157fca8 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.3:6386\n   replicates 0cfbceec272b6ff70e1dfb5c5346a5cb2c20c884\nCan I "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" the above configuration? "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yes'")]),t._v(" to accept"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Nodes configuration updated\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Assign a different config epoch to each node\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Sending CLUSTER MEET messages to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" the cluster\nWaiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the cluster to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Performing Cluster Check "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("using node "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6381"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nM: 75527b790e46530ea271a5b78f9e0fd9030f68e0 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6381\n   slots:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("-5460"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5461")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" master\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" additional replica"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nM: 0cfbceec272b6ff70e1dfb5c5346a5cb2c20c884 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.2:6383\n   slots:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5461")]),t._v("-10922"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5462")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" master\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" additional replica"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nS: 016ae9624202891cc6f2b480ff0634de478197fb "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.2:6384\n   slots: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" slave\n   replicates 75527b790e46530ea271a5b78f9e0fd9030f68e0\nM: 53012ebdd25005840da9ecbe07d937296a264206 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.3:6385\n   slots:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10923")]),t._v("-16383"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5461")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" master\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" additional replica"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nS: 031dd0fd5ad90fa26fcf45d49ad906d063611a6d "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6382\n   slots: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" slave\n   replicates 53012ebdd25005840da9ecbe07d937296a264206\nS: b6d70f2ed78922b1dcb7967ebe1d05ad9157fca8 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.3:6386\n   slots: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" slave\n   replicates 0cfbceec272b6ff70e1dfb5c5346a5cb2c20c884\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" All nodes agree about slots configuration.\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Check "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" slots"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Check slots coverage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OK"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" All "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16384")]),t._v(" slots covered.\n")])])]),e("h4",{attrs:{id:"（5）日常维护操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（5）日常维护操作"}},[t._v("#")]),t._v(" （5）日常维护操作")]),t._v(" "),e("ul",[e("li",[t._v("关闭集群 - "),e("code",[t._v("./create-cluster stop")])]),t._v(" "),e("li",[t._v("检查集群是否健康（指定任意节点即可）："),e("code",[t._v("./redis-cli --cluster check <ip:port>")])]),t._v(" "),e("li",[t._v("尝试修复集群节点："),e("code",[t._v("./redis-cli --cluster fix <ip:port>")])])]),t._v(" "),e("h2",{attrs:{id:"redis-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-命令"}},[t._v("#")]),t._v(" Redis 命令")]),t._v(" "),e("h3",{attrs:{id:"通用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通用命令"}},[t._v("#")]),t._v(" 通用命令")]),t._v(" "),e("blockquote",[e("p",[t._v("命令详细用法，请参考 "),e("a",{attrs:{href:"https://redis.io/commands",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Redis 命令官方文档")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("搬迁两张 cheat sheet 图，原址：https://www.cheatography.com/tasjaevan/cheat-sheets/redis/")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0b8ea57?w=2230&h=2914&f=png&s=246433",alt:"img"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0e9ba3c?w=2229&h=2890&f=png&s=192997",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"集群命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集群命令"}},[t._v("#")]),t._v(" 集群命令")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("集群")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("cluster info")]),t._v(" - 打印集群的信息")]),t._v(" "),e("li",[e("code",[t._v("cluster nodes")]),t._v(" - 列出集群当前已知的所有节点（ node），以及这些节点的相关信息。")])])]),t._v(" "),e("li",[e("strong",[t._v("节点")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("cluster meet <ip> <port>")]),t._v(" - 将 ip 和 port 所指定的节点添加到集群当中，让它成为集群的一份子。")]),t._v(" "),e("li",[e("code",[t._v("cluster forget <node_id>")]),t._v(" - 从集群中移除 node_id 指定的节点。")]),t._v(" "),e("li",[e("code",[t._v("cluster replicate <node_id>")]),t._v(" - 将当前节点设置为 node_id 指定的节点的从节点。")]),t._v(" "),e("li",[e("code",[t._v("cluster saveconfig")]),t._v(" - 将节点的配置文件保存到硬盘里面。")])])]),t._v(" "),e("li",[e("strong",[t._v("槽(slot)")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("cluster addslots <slot> [slot ...]")]),t._v(" - 将一个或多个槽（ slot）指派（ assign）给当前节点。")]),t._v(" "),e("li",[e("code",[t._v("cluster delslots <slot> [slot ...]")]),t._v(" - 移除一个或多个槽对当前节点的指派。")]),t._v(" "),e("li",[e("code",[t._v("cluster flushslots")]),t._v(" - 移除指派给当前节点的所有槽，让当前节点变成一个没有指派任何槽的节点。")]),t._v(" "),e("li",[e("code",[t._v("cluster setslot <slot> node <node_id>")]),t._v(" - 将槽 slot 指派给 node_id 指定的节点，如果槽已经指派给另一个节点，那么先让另一个节点删除该槽>，然后再进行指派。")]),t._v(" "),e("li",[e("code",[t._v("cluster setslot <slot> migrating <node_id>")]),t._v(" - 将本节点的槽 slot 迁移到 node_id 指定的节点中。")]),t._v(" "),e("li",[e("code",[t._v("cluster setslot <slot> importing <node_id>")]),t._v(" - 从 node_id 指定的节点中导入槽 slot 到本节点。")]),t._v(" "),e("li",[e("code",[t._v("cluster setslot <slot> stable")]),t._v(" - 取消对槽 slot 的导入（ import）或者迁移（ migrate）。")])])]),t._v(" "),e("li",[e("strong",[t._v("键")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("cluster keyslot <key>")]),t._v(" - 计算键 key 应该被放置在哪个槽上。")]),t._v(" "),e("li",[e("code",[t._v("cluster countkeysinslot <slot>")]),t._v(" - 返回槽 slot 目前包含的键值对数量。")]),t._v(" "),e("li",[e("code",[t._v("cluster getkeysinslot <slot> <count>")]),t._v(" - 返回 count 个 slot 槽中的键。")])])])]),t._v(" "),e("h2",{attrs:{id:"压力测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#压力测试"}},[t._v("#")]),t._v(" 压力测试")]),t._v(" "),e("blockquote",[e("p",[t._v("参考官方文档："),e("a",{attrs:{href:"https://redis.io/topics/benchmarks",target:"_blank",rel:"noopener noreferrer"}},[t._v("How fast is Redis?"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("Redis 自带了一个性能测试工具："),e("code",[t._v("redis-benchmark")])]),t._v(" "),e("p",[e("strong",[t._v("（1）基本测试")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("redis-benchmark -q -n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),t._v("\n")])])]),e("ul",[e("li",[e("code",[t._v("-q")]),t._v(" 表示静默（quiet）执行")]),t._v(" "),e("li",[e("code",[t._v("-n 100000")]),t._v(" 请求 10 万次")])]),t._v(" "),e("p",[e("strong",[t._v("（2）测试指定读写指令")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ redis-benchmark -t set,lpush -n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),t._v(" -q\nSET: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("74239.05")]),t._v(" requests per second\nLPUSH: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("79239.30")]),t._v(" requests per second\n")])])]),e("p",[e("strong",[t._v("（3）测试 pipeline 模式下指定读写指令")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("redis-benchmark -n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),t._v(" -t set,get -P "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" -q\nSET: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("403063.28")]),t._v(" requests per second\nGET: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("508388.41")]),t._v(" requests per second\n")])])]),e("h2",{attrs:{id:"客户端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[t._v("#")]),t._v(" 客户端")]),t._v(" "),e("p",[t._v("推荐使用 "),e("a",{attrs:{href:"https://github.com/uglide/RedisDesktopManager",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("RedisDesktopManager")]),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚本"}},[t._v("#")]),t._v(" 脚本")]),t._v(" "),e("blockquote",[e("p",[t._v("CentOS7 环境安装脚本："),e("a",{attrs:{href:"https://github.com/dunwu/linux-tutorial/tree/master/codes/linux/soft",target:"_blank",rel:"noopener noreferrer"}},[t._v("软件运维配置脚本集合"),e("OutboundLink")],1)])]),t._v(" "),e("p",[e("strong",[t._v("安装说明")])]),t._v(" "),e("ul",[e("li",[t._v("采用编译方式安装 Redis, 并将其注册为 systemd 服务")]),t._v(" "),e("li",[t._v("安装路径为："),e("code",[t._v("/usr/local/redis")])]),t._v(" "),e("li",[t._v("默认下载安装 "),e("code",[t._v("5.0.4")]),t._v(" 版本，端口号为："),e("code",[t._v("6379")]),t._v("，密码为空")])]),t._v(" "),e("p",[e("strong",[t._v("使用方法")])]),t._v(" "),e("ul",[e("li",[t._v("默认安装 - 执行以下任意命令即可：")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -o- https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/redis-install.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -qO- https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/redis-install.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),e("ul",[e("li",[t._v("自定义安装 - 下载脚本到本地，并按照以下格式执行：")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" redis-install.sh "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("version"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("password"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("参数说明：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("version")]),t._v(" - redis 版本号")]),t._v(" "),e("li",[e("code",[t._v("port")]),t._v(" - redis 服务端口号")]),t._v(" "),e("li",[e("code",[t._v("password")]),t._v(" - 访问密码")])]),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("官网")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis 官网"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/antirez/redis",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis github"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://redis.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis 官方文档中文版"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("strong",[t._v("书籍")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://item.jd.com/11791607.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Redis 实战》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://item.jd.com/11486101.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Redis 设计与实现》"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("strong",[t._v("教程")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://redisdoc.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis 命令参考"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[e("strong",[t._v("文章")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.im/post/5b8fc5536fb9a05d2d01fb11",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入剖析 Redis 系列(三) - Redis 集群模式搭建与原理详解"),e("OutboundLink")],1)])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);